"CASH can read C-like scripts!"
"One can use \$ to recover variable data, like this: var1=13"
"Also a more C-Like approach with (\*variable) is available: var1=13"
"See below a couple of operation results:"
"2+3 = 5"
"2-3 = -1"
"2*-3 = -6"
"6/3 = 2"
"7%4 = 3"
"CASH can also have unary operators. Starting from 1 with +1: 2"
"Then going back to 1 with -1: 1"
"Lazy while coding? No problem, CASH supports operation + assigment contractions:"
"From 1: 1"
"Plus 2: 3"
"Times 3: 9"
"Minus 1: 8"
"Divided by 5: 1"
"Note the last operation was an integer division. CASH also support floats:"
"2.0+3E2 = 302"
"2e-1-3.2 = -3"
"2*-3E+1 = -60"
"8.0/3.0 = 2.66667"
"Floats can also have unary operators. Starting from 1.2 with ++: 2.2"
"Then going back to 1.2 with --: 1.2"
"Floats are also in contractions:"
"From 1e-0: 1"
"Plus 2.0: 3"
"Times 3E+0: 9"
"Minus 1.0: 8"
"Divided by 5e0: 1.6"
"CASH also understants strings: Hello"
"The only supported operations are concatenations (involving +): Hello World!"
"From dynamic types, it is also expected to mix and match: a float 320 with an int 2"
"Do you want to know if it works with the right precedence?"
"Here: f = 10.0 and 3+17e-1*(42%13+4-(f+=2e1/2*7+17%5))-23.0 = -147.5"
"Beware: the assignment in the middle of the expression might not work."
"This is due to some limitations and orders in conversion of types."
"These are the totally unsuported operators:"
"Now moving on to logic..."
"...so let's proceed."
"Logical expressions always return integers, but 'ifs' support all types:"
"This will be executed."
"CASH also support loops, starting with 'for's."
"See bellow how to calculate common multiples."
"The after 50 attempts, found first 10 common multiples of 2 and 3:"
"0, 6, 12, 18, 24, 30, 36, 42, 48, 54, 60"
"'while's and 'do-while's are also supported."
"See bellow all primes until 50."
"The number 1 is a prime!"
"The number 2 is a prime!"
"The number 3 is a prime!"
"The number 5 is a prime!"
"The number 7 is a prime!"
"The number 11 is a prime!"
"The number 13 is a prime!"
"The number 17 is a prime!"
"The number 19 is a prime!"
"The number 23 is a prime!"
"The number 29 is a prime!"
"The number 31 is a prime!"
"The number 37 is a prime!"
"The number 41 is a prime!"
"The number 43 is a prime!"
"The number 47 is a prime!"
"Unfortunately for loops CASH does not support 'break' or 'continue'"
"Here is the end of the tutorial/manual/success_coverage_test!"
